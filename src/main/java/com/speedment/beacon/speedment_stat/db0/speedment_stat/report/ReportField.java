package com.speedment.beacon.speedment_stat.db0.speedment_stat.report;

import com.speedment.core.field.reference.ComparableReferenceField;
import com.speedment.core.field.reference.string.StringReferenceField;
import javax.annotation.Generated;
import static com.speedment.core.field.FieldUtil.findColumn;

/**
 * Interface representing the fields of an entity.
 * 
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public final class ReportField {
    
    public final static ComparableReferenceField<Report, Integer> ID = new ComparableReferenceField<>(() -> findColumn(Report.class, "id"), Report::getId);
    public final static StringReferenceField<Report> TITLE = new StringReferenceField<>(() -> findColumn(Report.class, "title"), Report::getTitle);
    public final static StringReferenceField<Report> SQL = new StringReferenceField<>(() -> findColumn(Report.class, "sql"), Report::getSql);
    public final static StringReferenceField<Report> CHARTURL = new StringReferenceField<>(() -> findColumn(Report.class, "chartUrl"), o -> o.getChartUrl().orElse(null));
    public final static ComparableReferenceField<Report, Integer> LISTORDER = new ComparableReferenceField<>(() -> findColumn(Report.class, "listOrder"), o -> o.getListOrder().orElse(null));
    
    private ReportField() {
        
    }
}