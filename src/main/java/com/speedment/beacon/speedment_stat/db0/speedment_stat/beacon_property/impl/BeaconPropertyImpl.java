package com.speedment.beacon.speedment_stat.db0.speedment_stat.beacon_property.impl;

import com.speedment.beacon.speedment_stat.db0.speedment_stat.beacon_property.BeaconProperty;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.beacon_property.BeaconPropertyBuilder;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'speedment_stat.db0.speedment_stat.beacon_property'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class BeaconPropertyImpl implements BeaconPropertyBuilder {
    
    private Long beacon;
    private Integer key;
    private String value;
    
    public BeaconPropertyImpl() {
        
    }
    
    public BeaconPropertyImpl(final BeaconProperty beaconProperty) {
        setBeacon(beaconProperty.getBeacon());
        setKey(beaconProperty.getKey());
        beaconProperty.getValue().ifPresent(this::setValue);
    }
    
    @Override
    public Long getBeacon() {
        return beacon;
    }
    
    @Override
    public final BeaconPropertyImpl setBeacon(Long beacon) {
        this.beacon = beacon;
        return this;
    }
    
    @Override
    public Integer getKey() {
        return key;
    }
    
    @Override
    public final BeaconPropertyImpl setKey(Integer key) {
        this.key = key;
        return this;
    }
    
    @Override
    public Optional<String> getValue() {
        return Optional.ofNullable(value);
    }
    
    @Override
    public final BeaconPropertyImpl setValue(String value) {
        this.value = value;
        return this;
    }
    
    @Override
    public BeaconProperty build() {
        return new BeaconPropertyImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("beacon = "+Objects.toString(getBeacon()));
        sj.add("key = "+Objects.toString(getKey()));
        sj.add("value = "+Objects.toString(getValue().orElse(null)));
        return "BeaconPropertyImpl "+sj.toString();
    }
}