package com.speedment.beacon.speedment_stat.db0.speedment_stat.message.impl;

import com.speedment.beacon.speedment_stat.db0.speedment_stat.message.Message;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.message.MessageBuilder;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.message.MessageManager;
import com.speedment.core.exception.SpeedmentException;
import com.speedment.core.manager.sql.AbstractSqlManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * A manager implementation representing an entity (for example, a row) in the Table 'speedment_stat.db0.speedment_stat.message'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class MessageManagerImpl extends AbstractSqlManager<Long, Message, MessageBuilder> implements MessageManager {
    
    public MessageManagerImpl() {
        setSqlEntityMapper(this::defaultReadEntity);
    }
    
    @Override
    public MessageBuilder builder() {
        return new MessageImpl();
    }
    
    @Override
    public MessageBuilder toBuilder(Message prototype) {
        return new MessageImpl(prototype);
    }
    
    protected Message defaultReadEntity(ResultSet resultSet) {
        final MessageBuilder builder = builder();
        try {
            builder.setId(resultSet.getLong("id"));
            builder.setCreated(resultSet.getTimestamp("created"));
            builder.setIpAddress(resultSet.getString("ipAddress"));
            builder.setIpAddressName(getString(resultSet, "ipAddressName"));
            builder.setRemotePort(resultSet.getInt("remotePort"));
            builder.setGui(getString(resultSet, "gui"));
            builder.setCoreFullVersion(getString(resultSet, "coreFullVersion"));
            builder.setSessionId(getString(resultSet, "sessionId"));
            builder.setVersion(getString(resultSet, "version"));
            builder.setType(getString(resultSet, "type"));
            builder.setRegId(getString(resultSet, "regId"));
        }
        catch (SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return builder;
    }
}