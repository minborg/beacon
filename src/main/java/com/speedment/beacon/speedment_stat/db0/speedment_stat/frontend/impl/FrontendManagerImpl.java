package com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.impl;

import com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.Frontend;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.FrontendBuilder;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.FrontendManager;
import com.speedment.core.exception.SpeedmentException;
import com.speedment.core.manager.sql.AbstractSqlManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * A manager implementation representing an entity (for example, a row) in the Table 'speedment_stat.db0.speedment_stat.frontend'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class FrontendManagerImpl extends AbstractSqlManager<Long, Frontend, FrontendBuilder> implements FrontendManager {
    
    public FrontendManagerImpl() {
        setSqlEntityMapper(this::defaultReadEntity);
    }
    
    @Override
    public FrontendBuilder builder() {
        return new FrontendImpl();
    }
    
    @Override
    public FrontendBuilder toBuilder(Frontend prototype) {
        return new FrontendImpl(prototype);
    }
    
    protected Frontend defaultReadEntity(ResultSet resultSet) {
        final FrontendBuilder builder = builder();
        try {
            builder.setId(resultSet.getLong("id"));
            builder.setRegId(getString(resultSet, "regId"));
            builder.setFirstName(getString(resultSet, "first_name"));
            builder.setLastName(getString(resultSet, "last_name"));
            builder.setEmail(getString(resultSet, "email"));
            builder.setOrganization(getString(resultSet, "organization"));
            builder.setCountry(getString(resultSet, "country"));
            builder.setPhone(getString(resultSet, "phone"));
            builder.setVersion(getString(resultSet, "version"));
            builder.setCoreFullVersion(resultSet.getString("coreFullVersion"));
            builder.setCreated(resultSet.getTimestamp("created"));
            builder.setIpAddress(resultSet.getString("ipAddress"));
            builder.setIpAddressName(resultSet.getString("ipAddressName"));
            builder.setRemotePort(resultSet.getInt("remotePort"));
            builder.setComment(getString(resultSet, "comment"));
        }
        catch (SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return builder;
    }
}