package com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.impl;

import com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.Frontend;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.frontend.FrontendBuilder;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'speedment_stat.db0.speedment_stat.frontend'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class FrontendImpl implements FrontendBuilder {
    
    private Long id;
    private String regId;
    private String firstName;
    private String lastName;
    private String email;
    private String organization;
    private String country;
    private String phone;
    private String version;
    private String coreFullVersion;
    private Timestamp created;
    private String ipAddress;
    private String ipAddressName;
    private Integer remotePort;
    private String comment;
    
    public FrontendImpl() {
        
    }
    
    public FrontendImpl(final Frontend frontend) {
        setId(frontend.getId());
        frontend.getRegId().ifPresent(this::setRegId);
        frontend.getFirstName().ifPresent(this::setFirstName);
        frontend.getLastName().ifPresent(this::setLastName);
        frontend.getEmail().ifPresent(this::setEmail);
        frontend.getOrganization().ifPresent(this::setOrganization);
        frontend.getCountry().ifPresent(this::setCountry);
        frontend.getPhone().ifPresent(this::setPhone);
        frontend.getVersion().ifPresent(this::setVersion);
        setCoreFullVersion(frontend.getCoreFullVersion());
        setCreated(frontend.getCreated());
        setIpAddress(frontend.getIpAddress());
        setIpAddressName(frontend.getIpAddressName());
        setRemotePort(frontend.getRemotePort());
        frontend.getComment().ifPresent(this::setComment);
    }
    
    @Override
    public Long getId() {
        return id;
    }
    
    @Override
    public final FrontendImpl setId(Long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Optional<String> getRegId() {
        return Optional.ofNullable(regId);
    }
    
    @Override
    public final FrontendImpl setRegId(String regId) {
        this.regId = regId;
        return this;
    }
    
    @Override
    public Optional<String> getFirstName() {
        return Optional.ofNullable(firstName);
    }
    
    @Override
    public final FrontendImpl setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @Override
    public Optional<String> getLastName() {
        return Optional.ofNullable(lastName);
    }
    
    @Override
    public final FrontendImpl setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @Override
    public Optional<String> getEmail() {
        return Optional.ofNullable(email);
    }
    
    @Override
    public final FrontendImpl setEmail(String email) {
        this.email = email;
        return this;
    }
    
    @Override
    public Optional<String> getOrganization() {
        return Optional.ofNullable(organization);
    }
    
    @Override
    public final FrontendImpl setOrganization(String organization) {
        this.organization = organization;
        return this;
    }
    
    @Override
    public Optional<String> getCountry() {
        return Optional.ofNullable(country);
    }
    
    @Override
    public final FrontendImpl setCountry(String country) {
        this.country = country;
        return this;
    }
    
    @Override
    public Optional<String> getPhone() {
        return Optional.ofNullable(phone);
    }
    
    @Override
    public final FrontendImpl setPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    @Override
    public Optional<String> getVersion() {
        return Optional.ofNullable(version);
    }
    
    @Override
    public final FrontendImpl setVersion(String version) {
        this.version = version;
        return this;
    }
    
    @Override
    public String getCoreFullVersion() {
        return coreFullVersion;
    }
    
    @Override
    public final FrontendImpl setCoreFullVersion(String coreFullVersion) {
        this.coreFullVersion = coreFullVersion;
        return this;
    }
    
    @Override
    public Timestamp getCreated() {
        return created;
    }
    
    @Override
    public final FrontendImpl setCreated(Timestamp created) {
        this.created = created;
        return this;
    }
    
    @Override
    public String getIpAddress() {
        return ipAddress;
    }
    
    @Override
    public final FrontendImpl setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    @Override
    public String getIpAddressName() {
        return ipAddressName;
    }
    
    @Override
    public final FrontendImpl setIpAddressName(String ipAddressName) {
        this.ipAddressName = ipAddressName;
        return this;
    }
    
    @Override
    public Integer getRemotePort() {
        return remotePort;
    }
    
    @Override
    public final FrontendImpl setRemotePort(Integer remotePort) {
        this.remotePort = remotePort;
        return this;
    }
    
    @Override
    public Optional<String> getComment() {
        return Optional.ofNullable(comment);
    }
    
    @Override
    public final FrontendImpl setComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @Override
    public Frontend build() {
        return new FrontendImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("regId = "+Objects.toString(getRegId().orElse(null)));
        sj.add("firstName = "+Objects.toString(getFirstName().orElse(null)));
        sj.add("lastName = "+Objects.toString(getLastName().orElse(null)));
        sj.add("email = "+Objects.toString(getEmail().orElse(null)));
        sj.add("organization = "+Objects.toString(getOrganization().orElse(null)));
        sj.add("country = "+Objects.toString(getCountry().orElse(null)));
        sj.add("phone = "+Objects.toString(getPhone().orElse(null)));
        sj.add("version = "+Objects.toString(getVersion().orElse(null)));
        sj.add("coreFullVersion = "+Objects.toString(getCoreFullVersion()));
        sj.add("created = "+Objects.toString(getCreated()));
        sj.add("ipAddress = "+Objects.toString(getIpAddress()));
        sj.add("ipAddressName = "+Objects.toString(getIpAddressName()));
        sj.add("remotePort = "+Objects.toString(getRemotePort()));
        sj.add("comment = "+Objects.toString(getComment().orElse(null)));
        return "FrontendImpl "+sj.toString();
    }
}