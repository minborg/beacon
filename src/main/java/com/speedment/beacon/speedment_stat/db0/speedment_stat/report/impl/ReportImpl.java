package com.speedment.beacon.speedment_stat.db0.speedment_stat.report.impl;

import com.speedment.beacon.speedment_stat.db0.speedment_stat.report.Report;
import com.speedment.beacon.speedment_stat.db0.speedment_stat.report.ReportBuilder;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation  representing an entity (for example, a row) in the Table 'speedment_stat.db0.speedment_stat.report'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public class ReportImpl implements ReportBuilder {
    
    private Integer id;
    private String title;
    private String sql;
    private String chartUrl;
    private Integer listOrder;
    
    public ReportImpl() {
        
    }
    
    public ReportImpl(final Report report) {
        setId(report.getId());
        setTitle(report.getTitle());
        setSql(report.getSql());
        report.getChartUrl().ifPresent(this::setChartUrl);
        report.getListOrder().ifPresent(this::setListOrder);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public final ReportImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public String getTitle() {
        return title;
    }
    
    @Override
    public final ReportImpl setTitle(String title) {
        this.title = title;
        return this;
    }
    
    @Override
    public String getSql() {
        return sql;
    }
    
    @Override
    public final ReportImpl setSql(String sql) {
        this.sql = sql;
        return this;
    }
    
    @Override
    public Optional<String> getChartUrl() {
        return Optional.ofNullable(chartUrl);
    }
    
    @Override
    public final ReportImpl setChartUrl(String chartUrl) {
        this.chartUrl = chartUrl;
        return this;
    }
    
    @Override
    public Optional<Integer> getListOrder() {
        return Optional.ofNullable(listOrder);
    }
    
    @Override
    public final ReportImpl setListOrder(Integer listOrder) {
        this.listOrder = listOrder;
        return this;
    }
    
    @Override
    public Report build() {
        return new ReportImpl(this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("title = "+Objects.toString(getTitle()));
        sj.add("sql = "+Objects.toString(getSql()));
        sj.add("chartUrl = "+Objects.toString(getChartUrl().orElse(null)));
        sj.add("listOrder = "+Objects.toString(getListOrder().orElse(null)));
        return "ReportImpl "+sj.toString();
    }
}