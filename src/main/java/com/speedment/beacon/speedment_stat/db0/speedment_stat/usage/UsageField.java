package com.speedment.beacon.speedment_stat.db0.speedment_stat.usage;

import com.speedment.core.field.reference.ComparableReferenceField;
import com.speedment.core.field.reference.string.StringReferenceField;
import java.sql.Timestamp;
import javax.annotation.Generated;
import static com.speedment.core.field.FieldUtil.findColumn;

/**
 * Interface representing the fields of an entity.
 * 
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public final class UsageField {
    
    public final static ComparableReferenceField<Usage, Integer> ID = new ComparableReferenceField<>(() -> findColumn(Usage.class, "id"), Usage::getId);
    public final static StringReferenceField<Usage> SITE = new StringReferenceField<>(() -> findColumn(Usage.class, "site"), Usage::getSite);
    public final static StringReferenceField<Usage> ARTIFACT = new StringReferenceField<>(() -> findColumn(Usage.class, "artifact"), o -> o.getArtifact().orElse(null));
    public final static ComparableReferenceField<Usage, Timestamp> TIMESTAMP = new ComparableReferenceField<>(() -> findColumn(Usage.class, "timeStamp"), Usage::getTimeStamp);
    public final static ComparableReferenceField<Usage, Integer> COUNT = new ComparableReferenceField<>(() -> findColumn(Usage.class, "count"), o -> o.getCount().orElse(null));
    
    private UsageField() {
        
    }
}